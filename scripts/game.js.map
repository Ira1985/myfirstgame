{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/index.js",
    "src/objects/Donats.js",
    "src/objects/Score.js",
    "src/states/GameState.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "import GameState from 'states/GameState';\r\n\r\nclass Game extends Phaser.Game {\r\n\r\n\tconstructor() {\r\n\t\tsuper(1280, 960, Phaser.CANVAS, null, null);\r\n\t\tthis.state.add('GameState', GameState, false);\r\n\t\tthis.state.start('GameState');\r\n        this.donat;\r\n\t\tthis.donat1;\r\n\t\tthis.donat2;\r\n        this.newDonat;\r\n        this.donatInfo;\r\n        this.timer;\r\n        this.scoreText;\r\n        this.score;\r\n\t\tthis.startPointX;\r\n\t\tthis.startPointY;\r\n\t\tthis.donats;\r\n\t\tthis.timer;\r\n\t\tthis.count;\r\n\t\tthis.timer1;\r\n\t}\r\n\r\n}\r\n\r\nnew Game();\r\n",
    "class Donats extends Phaser.Sprite {\r\n  constructor (game)\r\n  {\r\n      super(game, 0, 0);\r\n      game.donatInfo = {\r\n        width: 20,\r\n        height: 20,\r\n        count: {\r\n            row: 11,\r\n            col: 13\r\n        },\r\n        offset: {\r\n            top: 10,\r\n            left: 60\r\n        },\r\n        padding: 10\r\n    }\r\n    game.donats = game.add.group();\r\n    for(let i = 0; i < game.donatInfo.count.col; i++) {\r\n        for(let j = 0; j < game.donatInfo.count.row; j++) {\r\n            let donatX = (i*(game.donatInfo.width+game.donatInfo.padding))+game.donatInfo.offset.left;\r\n            let donatY = (j*(game.donatInfo.height+game.donatInfo.padding))+game.donatInfo.offset.top;\r\n            game.newDonat = game.add.sprite(donatX, donatY, 'gem' + game.rnd.integerInRange(1, 7));\r\n            game.newDonat.scale.setTo(0.3,0.3);\r\n            game.physics.enable(game.newDonat, Phaser.Physics.ARCADE);\r\n            game.newDonat.body.collideWorldBounds = true;\r\n            game.newDonat.body.gravity.y = 1000;\r\n            game.newDonat.body.immovable = false;\r\n            game.newDonat.inputEnabled = true;\r\n            game.newDonat.input.enableDrag();\r\n            game.donats.add(game.newDonat);\r\n        }\r\n    }\r\n  }\r\n    moveLeftAndCheckMatch(item, game, index, startPointX, startPointY) {\r\n        let key1 = item.key;\r\n        let key2 = game.donats.children[index - 11].key;\r\n        game.donats.children[index - 11].loadTexture(key1);\r\n        item.loadTexture(key2);\r\n        item.input.draggable = false;\r\n        item.x = startPointX;\r\n        let objOfMatches = {};\r\n        let idOfMatches = [];\r\n        for(let i = 0; i < 6; i++) {\r\n            idOfMatches = [];\r\n            for(let j = 0; j < 12; j++) {\r\n                if(i == 0){\r\n                    if(game.donats.children[index - 11].key == game.donats.children[index - 11 - 11*j].key) {\r\n                        idOfMatches.push(index - 11 - 11*j);\r\n                        objOfMatches[game.donats.children[index - 11].key + \" 0\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 1) {\r\n                    if(game.donats.children[index].key == game.donats.children[index + 11*j].key) {\r\n                        idOfMatches.push(index + 11*j);\r\n                        objOfMatches[game.donats.children[index].key  + \" 1\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 2) {\r\n                    if(game.donats.children[index - 11].key == game.donats.children[index - 11 - j].key) {\r\n                        idOfMatches.push(index - 11 - j);\r\n                        objOfMatches[game.donats.children[index - 11].key + \" 2\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 3){\r\n                    if(game.donats.children[index - 11].key == game.donats.children[index - 11 + j].key) {\r\n                        idOfMatches.push(index - 11 + j);\r\n                        objOfMatches[game.donats.children[index - 11].key + \" 3\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 4) {\r\n                    if(game.donats.children[index].key == game.donats.children[index - j].key) {\r\n                        idOfMatches.push(index - j);\r\n                        objOfMatches[game.donats.children[index].key + \" 4\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 5) {\r\n                    if(game.donats.children[index].key == game.donats.children[index + j].key) {\r\n                        idOfMatches.push(index + j);\r\n                        objOfMatches[game.donats.children[index].key + \" 5\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n            }\r\n        }\r\n        let arrOfDelete = Object.values(objOfMatches);\r\n        this.deleteDonats(arrOfDelete, game);\r\n    }\r\n    moveRightAndCheckMatch(item, game, index, startPointX, startPointY) {\r\n        let key1 = item.key;\r\n        let key2 = game.donats.children[index + 11].key;\r\n        game.donats.children[index + 11].loadTexture(key1);\r\n        item.loadTexture(key2);\r\n        item.input.draggable = false;\r\n        item.x = startPointX;\r\n        let objOfMatches = {};\r\n        let idOfMatches = [];\r\n        for(let i = 0; i < 6; i++) {\r\n            idOfMatches = [];\r\n            for(let j = 0; j < 12; j++) {\r\n                if(i == 0){\r\n                    if(game.donats.children[index].key == game.donats.children[index - 11*j].key) {\r\n                        idOfMatches.push(index - 11*j);\r\n                        objOfMatches[game.donats.children[index].key + \" 0\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 1) {\r\n                    if(game.donats.children[index + 11].key == game.donats.children[index + 11 + 11*j].key) {\r\n                        idOfMatches.push(index + 11 + 11*j);\r\n                        objOfMatches[game.donats.children[index + 11].key  + \" 1\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 2) {\r\n                    if(game.donats.children[index + 11].key == game.donats.children[index + 11 - j].key) {\r\n                        idOfMatches.push(index + 11 - j);\r\n                        objOfMatches[game.donats.children[index + 11].key + \" 2\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 3){\r\n                    if(game.donats.children[index + 11].key == game.donats.children[index + 11 + j].key) {\r\n                        idOfMatches.push(index + 11 + j);\r\n                        objOfMatches[game.donats.children[index + 11].key + \" 3\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 4) {\r\n                    if(game.donats.children[index].key == game.donats.children[index - j].key) {\r\n                        idOfMatches.push(index - j);\r\n                        objOfMatches[game.donats.children[index].key + \" 4\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 5) {\r\n                    if(game.donats.children[index].key == game.donats.children[index + j].key) {\r\n                        idOfMatches.push(index + j);\r\n                        objOfMatches[game.donats.children[index].key + \" 5\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n            }\r\n        }\r\n        let arrOfDelete = Object.values(objOfMatches);\r\n        this.deleteDonats(arrOfDelete, game);\r\n    }\r\n    moveUpAndCheckMatch(item, game, index, startPointX, startPointY) {\r\n        let key1 = item.key;\r\n        let key2 = game.donats.children[index - 1].key;\r\n        game.donats.children[index - 1].loadTexture(key1);\r\n        item.loadTexture(key2);\r\n        item.input.draggable = false;\r\n        item.y = startPointY;\r\n        let objOfMatches = {};\r\n        let idOfMatches = [];\r\n        for(let i = 0; i < 6; i++) {\r\n            idOfMatches = [];\r\n            for(let j = 0; j < 12; j++) {\r\n                if(i == 0){\r\n                    if(game.donats.children[index].key == game.donats.children[index + 1*j].key) {\r\n                        idOfMatches.push(index + 1*j);\r\n                        objOfMatches[game.donats.children[index].key + \" 0\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 1) {\r\n                    if(game.donats.children[index - 1].key == game.donats.children[index - 1 - 1*j].key) {\r\n                        idOfMatches.push(index - 1 - 1*j);\r\n                        objOfMatches[game.donats.children[index - 1].key  + \" 1\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 2) {\r\n                    if(game.donats.children[index - 1].key == game.donats.children[index - 1 - 11*j].key) {\r\n                        idOfMatches.push(index - 1 - 11*j);\r\n                        objOfMatches[game.donats.children[index - 1].key + \" 2\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 3){\r\n                    if(game.donats.children[index - 1].key == game.donats.children[index - 1 + 11*j].key) {\r\n                        idOfMatches.push(index - 1 + 11*j);\r\n                        objOfMatches[game.donats.children[index - 1].key + \" 3\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 4) {\r\n                    if(game.donats.children[index].key == game.donats.children[index - 11*j].key) {\r\n                        idOfMatches.push(index - 11*j);\r\n                        objOfMatches[game.donats.children[index].key + \" 4\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 5) {\r\n                    if(game.donats.children[index].key == game.donats.children[index + 11*j].key) {\r\n                        idOfMatches.push(index + 11*j);\r\n                        objOfMatches[game.donats.children[index].key + \" 5\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n            }\r\n        }\r\n        let arrOfDelete = Object.values(objOfMatches);\r\n        arrOfDelete.forEach(item => console.log(item));\r\n        this.deleteDonats(arrOfDelete, game);\r\n    }\r\n    moveDownAndCheckMatch(item, game, index, startPointX, startPointY) {\r\n        let key1 = item.key;\r\n        let key2 = game.donats.children[index + 1].key;\r\n        game.donats.children[index + 1].loadTexture(key1);\r\n        item.loadTexture(key2);\r\n        item.input.draggable = false;\r\n        item.y = startPointY;\r\n        let objOfMatches = {};\r\n        let idOfMatches = [];\r\n        for(let i = 0; i < 6; i++) {\r\n            idOfMatches = [];\r\n            for(let j = 0; j < 12; j++) {\r\n                if(i == 0){\r\n                    if(game.donats.children[index].key == game.donats.children[index - 1*j].key) {\r\n                        idOfMatches.push(index - 1*j);\r\n                        objOfMatches[game.donats.children[index].key + \" 0\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 1) {\r\n                    if(game.donats.children[index + 1].key == game.donats.children[index + 1 + 1*j].key) {\r\n                        idOfMatches.push(index + 1 + 1*j);\r\n                        objOfMatches[game.donats.children[index + 1].key  + \" 1\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 2) {\r\n                    if(game.donats.children[index + 1].key == game.donats.children[index + 1 - 11*j].key) {\r\n                        idOfMatches.push(index + 1 - 11*j);\r\n                        objOfMatches[game.donats.children[index + 1].key + \" 2\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 3){\r\n                    if(game.donats.children[index + 1].key == game.donats.children[index + 1 + 11*j].key) {\r\n                        idOfMatches.push(index + 1 + 11*j);\r\n                        objOfMatches[game.donats.children[index + 1].key + \" 3\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 4) {\r\n                    if(game.donats.children[index].key == game.donats.children[index - 11*j].key) {\r\n                        idOfMatches.push(index - 11*j);\r\n                        objOfMatches[game.donats.children[index].key + \" 4\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n                if(i == 5) {\r\n                    if(game.donats.children[index].key == game.donats.children[index + 11*j].key) {\r\n                        idOfMatches.push(index + 11*j);\r\n                        objOfMatches[game.donats.children[index].key + \" 5\"] = idOfMatches;\r\n                    } else break;\r\n                }\r\n            }\r\n        }\r\n        let arrOfDelete = Object.values(objOfMatches);\r\n        arrOfDelete.forEach(item => console.log(item));\r\n        this.deleteDonats(arrOfDelete, game);\r\n    }\r\n    deleteDonats(arrOfDelete, game) {\r\n        arrOfDelete.forEach(item => {\r\n            if(item.length >= 3) {\r\n                item.forEach(elem => {\r\n                    let row = Math.ceil(elem/11);\r\n                    let minRow = row * 11 - 11;\r\n                    for(let i = elem; i > minRow; i--) {\r\n                        game.donats.children[i].loadTexture(game.donats.children[i - 1].key);\r\n                    }\r\n                    game.donats.children[minRow].loadTexture('gem' + game.rnd.integerInRange(1, 7));\r\n                    game.score += 10;\r\n                    game.scoreText.setText('Points: ' + game.score);\r\n                    this.gameOver(game.score);\r\n                })\r\n            }\r\n        })\r\n    }\r\n    gameOver(score) {\r\n        if(score > 100) {\r\n            alert('Game over');\r\n            location.reload();\r\n        }\r\n    }\r\n\r\n  \r\n}\r\n\r\nexport default Donats;",
    "class Score extends Phaser.Text {\r\n\r\n\tconstructor(game, x, y, text) {\r\n\r\n\t\tsuper(game, x, y, text, { font: \"18px Fredoka One\", fill: \"#0095DD\" });\r\n\r\n\t\tthis.game.stage.addChild(this);\r\n\r\n\t}\r\n\t\r\n\r\n    updateScore() {\r\n        game.score += 10;\r\n        console.log(this.game);\r\n    }\r\n\r\n}\r\n\r\nexport default Score;",
    "import Score from 'objects/Score';\r\nimport Donats from 'objects/Donats';\r\n\r\nclass GameState extends Phaser.State {\r\n    preload() {\r\n        const img = 'img/';\r\n        //this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\r\n        //this.scale.pageAlignHorizontally = true;\r\n        //this.scale.pageAlignVertically = true;\r\n        //this.stage.backgroundColor = \"#eee\";\r\n        this.load.image('gem1', img+'gem-01.png');\r\n        this.load.image('gem2', img+'gem-02.png');\r\n        this.load.image('gem3', img+'gem-03.png');\r\n        this.load.image('gem4', img+'gem-04.png');\r\n        this.load.image('gem5', img+'gem-05.png');\r\n        this.load.image('gem6', img+'gem-06.png');\r\n        this.load.image('gem7', img+'gem-07.png');\r\n        this.load.image('background', img+'background.jpg');\r\n        \r\n    }\r\n\r\n\tcreate() {\r\n\t\tthis.physics.startSystem(Phaser.Physics.ARCADE);\r\n\t\tlet back = this.add.sprite(0, 0, \"background\");\r\n\t\tthis.donats = this.add.group();\r\n\t\t/*for(let i = 0; i < 13; i++) {\r\n\t\t\tfor(let j = 0; j < 11; j++) {\r\n\t\t\t\tthis.donat = this.add.sprite(i*98.5, j*87.3, 'gem' + this.rnd.integerInRange(1, 7));\r\n\t\t\t\tthis.physics.enable(this.donat, Phaser.Physics.ARCADE);\r\n\t\t\t\tthis.donat.body.collideWorldBounds = true;\r\n\t\t\t\tthis.donat.scale.setTo(0.9, 0.9);\r\n\t\t\t\tthis.donat.inputEnabled = true;\r\n\t\t\t\tthis.donats.add(this.donat);\r\n\t\t\t}\r\n\t\t};*/\r\n\t\tfor(let i = 0; i < 143; i++) {\r\n\t\t\tthis.donat = this.add.sprite(0, 0, 'gem' + this.rnd.integerInRange(1, 7));\r\n\t\t\tthis.physics.enable(this.donat, Phaser.Physics.ARCADE);\r\n\t\t\tthis.donat.body.collideWorldBounds = true;\r\n\t\t\tthis.donat.scale.setTo(0.9, 0.9);\r\n\t\t\tthis.donat.inputEnabled = true;\r\n\t\t\tthis.donats.add(this.donat);\r\n\t\t}\r\n\t\tthis.donats.align(13, 11, 98.5, 87.3);\r\n\t\t//this.donats.alignIn(back, Phaser.TOP_LEFT, 98.5, 87.3);\r\n\r\n\t\tthis.timer = this.time.create(false);\r\n\t\tthis.count = 0;\r\n\t\tthis.timer1 = this.time.create(false);\r\n\r\n\t\tthis.donats.children.forEach((item, index) => {\r\n\r\n\t\t\titem.events.onInputDown.add((s, i) => {\r\n\t\t\t\tthis.startPointX = i.x;\r\n\t\t\t\tthis.startPointY = i.y;\r\n\t\t\t\tindex = this.donats.getIndex(item);\r\n\r\n\r\n\t\t\t\tthis.input.addMoveCallback((pointer, x, y) => {\r\n\t\t\t\t\tif(Math.abs(this.startPointX - x) > item.width/2 - 10) {\r\n\t\t\t\t\t\t/*if(this.startPointX - x > 0) {\r\n\t\t\t\t\t\t\tthis.add.tween(item).to( { x: '-98.5'}, 1000, Phaser.Easing.Linear.None, true);\r\n                            this.add.tween(this.donats.children[index - 1]).to( { x: '+98.5'}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\t\t\t\t\t\tlet donat1 = this.donats.getAt(index);\r\n\t\t\t\t\t\t\tlet donat2 = this.donats.getAt(index - 1);\r\n\t\t\t\t\t\t\tthis.donats.swap(donat1, donat2);\r\n                            this.input.moveCallbacks = [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.startPointX - x < 0) {\r\n\t\t\t\t\t\t\t//item.body.velocity.set(100, 0);\r\n\t\t\t\t\t\t\t//this.donats.children[index + 11].body.velocity.set(-100, 0);\r\n\t\t\t\t\t\t\t//this.add.tween(item).to( { x: item.x + item.width}, 4000, Phaser.Easing.Bounce.Out, true);\r\n                            //let d = this.donats.children[index + 11];\r\n                            //this.donats.children[index + 11] = this.donats.children[index];\r\n\t\t\t\t\t\t\t//this.donats.children[index] = d;\r\n\t\t\t\t\t\t\t//this.donats.swap(this.donats.children[index + 11], item);\r\n\t\t\t\t\t\t\t//this.donats.updateZ();\r\n\t\t\t\t\t\t\t//this.donats.replace(this.donats.getAt(index), donat2);\r\n\t\t\t\t\t\t\t//this.donats.add(donat1, null, index + 1);\r\n\t\t\t\t\t\t\t//this.donats.update();\r\n\t\t\t\t\t\t\t//this.donats.reverse();\r\n\t\t\t\t\t\t\t//this.donats.replace(this.donats.children[index + 11], donat1);\r\n                            //item = d;\r\n                            //item.x = donats.children[index + 11].x;\r\n\t\t\t\t\t\t\t//console.log(this.donats.getIndex(item));\r\n\t\t\t\t\t\t\t//this.donats.setChildIndex(item, index + 1);\r\n\t\t\t\t\t\t\tthis.add.tween(this.donats.getAt(index)).to( { x: '+98.5'}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\t\t\t\t\t\tthis.add.tween(this.donats.getAt(index + 1)).to( { x: '-98.5'}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\t\t\t\t\t\tlet donat1 = this.donats.getAt(index);\r\n\t\t\t\t\t\t\tlet donat2 = this.donats.getAt(index + 1);\r\n\t\t\t\t\t\t\tthis.donats.swap(donat1, donat2);\r\n\t\t\t\t\t\t\tthis.input.moveCallbacks = [];\r\n\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\tthis.move1(this.startPointX - x, item, index);\r\n\t\t\t\t\t} else if(Math.abs(this.startPointY - y) > this.donat.height/2 - 10) {\r\n\t\t\t\t\t\t/*if(this.startPointY - y > 0) {\r\n                            this.add.tween(item).to( { y: '-87.3'}, 1000, Phaser.Easing.Linear.None, true);\r\n                            this.add.tween(this.donats.children[index - 13]).to( { y: '+87.3'}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\t\t\t\t\t\tlet donat1 = this.donats.getAt(index);\r\n\t\t\t\t\t\t\tlet donat2 = this.donats.getAt(index - 13);\r\n\t\t\t\t\t\t\tthis.donats.swap(donat1, donat2);\r\n                            this.input.moveCallbacks = [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.startPointY - y < 0) {\r\n                            this.add.tween(item).to( { y: '+87.3'}, 1000, Phaser.Easing.Linear.None, true);\r\n                            this.add.tween(this.donats.children[index + 13]).to( { y: '-87.3'}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\t\t\t\t\t\tlet donat1 = this.donats.getAt(index);\r\n\t\t\t\t\t\t\tlet donat2 = this.donats.getAt(index + 13);\r\n\t\t\t\t\t\t\tthis.donats.swap(donat1, donat2);\r\n                            this.input.moveCallbacks = [];\r\n\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\tthis.move2(this.startPointY - y, item, index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(\"addMoveCallback\");\r\n\t\t\t\t});\r\n\t\t\t\t//let timer = this.time.create(false);\r\n\t\t\t\t//let s1 = timer.loop(2000, this.move3, this, this.donats);\r\n\t\t\t\t//timer.start();\r\n\t\t\t\t//let result = this.move3(this.donats);\r\n\t\t\t\t//this.deleteArr(result, this.donats)\r\n\t\t\t\t//let timer = this.time.create(false);\r\n\t\t\t\t//timer.add(1000, this.deleteArr, this, this.move3(this.donats), this.donats);\r\n\t\t\t\t//timer.start();\r\n\t\t\t});\r\n            item.events.onInputUp.add(() => {\r\n\t\t\t\t//this.donats.children.forEach((item, index) => {\r\n\t\t\t\t\t//console.log(index, item.key);\r\n\t\t\t\t//});\r\n\t\t\t\tlet first;\r\n\t\t\t\tlet count = 0;\r\n\t\t\t\tlet arr = [];\r\n               /* for(let i = 0; i < this.donats.length; i++) {\r\n                    if(i%13 == 0 || first.key != this.donats.getAt(i).key) {\r\n                        first = this.donats.getAt(i);\r\n                        if(count > 1) {\r\n                            //console.log(arr);\r\n                            arr.forEach(item => {\r\n                                this.donats.getAt(item).kill();\r\n                                while(item > 12) {\r\n                                    let next =this.donats.getAt(item - 13);\r\n                                    this.add.tween(this.donats.getAt(item - 13)).to( { y: '+87.3'}, 1000, Phaser.Easing.Linear.None, true);\r\n                                    let item1 = this.donats.getAt(item);\r\n                                    item1.x = this.donats.getAt(item).x;\r\n                                    item1.y = 0;\r\n                                    this.add.tween(item1).from( { y: '-200'}, 1000, Phaser.Easing.Bounce.Out, true);\r\n                                    this.donats.swap(this.donats.getAt(item), next);\r\n                                    item -= 13;\r\n                                }\r\n                                this.donats.getAt(item).loadTexture('gem' + this.rnd.integerInRange(1, 7));\r\n                                this.donats.getAt(item).visible = true;\r\n\r\n                            });\r\n\t\t\t\t\t\t\tthis.input.moveCallbacks = [];\r\n                            //return true;\r\n                        }\r\n                        count = 0;\r\n                        arr = [];\r\n                        arr.push(i);\r\n                        continue;\r\n                    } else {\r\n                        count++;\r\n                        arr.push(i);\r\n                    }\r\n                }*/\r\n                let first1;\r\n                let arr1 = [];\r\n                /*for(let i = 0; i < 13; i++) {\r\n                \tfirst1 = this.donats.getAt(i);\r\n                \tlet j = i + 13;\r\n                \tarr1.push(i);\r\n                \twhile(j < this.donats.length + 13) {\r\n\t\t\t\t\t\tif(first1.key == this.donats.getAt(j).key) {\r\n\t\t\t\t\t\t\tarr1.push(j);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif(arr1.length > 2) {\r\n\t\t\t\t\t\t\t\tlet it = arr1[0] - 13;\r\n\t\t\t\t\t\t\t\tconsole.log(arr1);\r\n\t\t\t\t\t\t\t\tarr1.forEach((item, index) => {\r\n\t\t\t\t\t\t\t\t\tlet don = this.donats.getAt(item).kill();\r\n\t\t\t\t\t\t\t\t\tdon.loadTexture('gem' + this.rnd.integerInRange(1, 7));\r\n\t\t\t\t\t\t\t\t\tdon.visible = true;\r\n\t\t\t\t\t\t\t\t\tdon.x = this.donats.getAt(item).x;\r\n\t\t\t\t\t\t\t\t\tdon.y = 0 + index*87.3;\r\n\t\t\t\t\t\t\t\t\t//this.add.tween(item).from( { y: '-200'}, 1000, Phaser.Easing.Bounce.Out, true);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\twhile(it > 0){\r\n\t\t\t\t\t\t\t\t\tthis.add.tween(this.donats.getAt(it)).to( { y: '+' + 87.3 * arr1.length}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\t\t\t\t\t\t\t\tarr1.forEach((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\tthis.donats.swap(this.donats.getAt(it + 13*index), this.donats.getAt(item));\r\n\t\t\t\t\t\t\t\t\t\tarr1.splice(index, 1, item-13);\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t//this.donats.swap(this.donats.getAt(it), this.donats.getAt(it1));\r\n\t\t\t\t\t\t\t\t\tit -= 13;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t//this.input.moveCallbacks = [];\r\n\t\t\t\t\t\t\t\t//return true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfirst1 = this.donats.getAt(j);\r\n\t\t\t\t\t\t\tarr1 = [];\r\n\t\t\t\t\t\t\tarr1.push(j);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tj += 13;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tarr1 = [];\r\n\t\t\t\t}*/\r\n\t\t\t\tthis.input.moveCallbacks = [];\r\n\t\t\t});\r\n\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/*this.donat.events.onDragUpdate.add(() => {\r\n\t\t\tconsole.log(startPointX, startPointY, x, y);\r\n\t\t\tif(Math.abs(startPointX - x) > Math.abs(startPointY - y)) {\r\n\t\t\t\tconsole.log('aaaaaa');\r\n\t\t\t\tthis.donat.input.allowVerticalDrag = true;\r\n\t\t\t\tthis.donat.input.allowHorizontalDrag = false;\r\n\r\n\t\t\t} else if(Math.abs(startPointX - x) < Math.abs(startPointY - y)) {\r\n\t\t\t\tconsole.log('bbbbbb');\r\n\t\t\t\tthis.donat.input.allowVerticalDrag = false;\r\n\t\t\t\tthis.donat.input.allowHorizontalDrag = true;\r\n\t\t\t}\r\n\t\t});*/\r\n                /*this.physics.startSystem(Phaser.Physics.ARCADE);\r\n        let back = this.add.sprite(62.5, 50, \"background\");\r\n        back.scale.setTo(0.3,0.345);\r\n        this.score = 0;\r\n\t\tthis.scoreText = new Score(this.game, 340, 10, \"Points: \" + this.game.score);\r\n        this.timeInSeconds = 120;\r\n        this.timeText = this.game.add.text(60, 30, \"0:00\",{font: '18px Fredoka One', fill: '#0095DD'});\r\n        this.timeText.anchor.set(0.5, 0.5);\r\n        \r\n        let donats = this.add.existing( new Donats(this) );\r\n        this.donats.children.forEach((item, index) => {\r\n            let startPointX = 0;\r\n            let startPointY = 0;\r\n            item.events.onInputDown.add(() => {\r\n                item.input.draggable = true;\r\n            });\r\n            item.events.onDragStart.add(() => {\r\n                startPointX = item.x;\r\n                startPointY = item.y;\r\n            }, this);\r\n            item.events.onDragUpdate.add(() => {\r\n                let differenceX = startPointX - item.x;\r\n                let differenceY = startPointY - item.y;\r\n            \r\n                if(differenceX > 10 && differenceY < 2 && differenceY > -2) {\r\n                    donats.moveLeftAndCheckMatch(item, this, index, startPointX, startPointY);\r\n                } else if(differenceX < -10 && differenceY < 2 && differenceY > -2) {\r\n                    donats.moveRightAndCheckMatch(item, this, index, startPointX, startPointY);\r\n                } else if(differenceY > 10 && differenceX < 2 && differenceX > -2) {\r\n                    donats.moveUpAndCheckMatch(item, this, index, startPointX, startPointY);\r\n                } else if(differenceY < -10 && differenceX < 2 && differenceX > -2) {\r\n                    donats.moveDownAndCheckMatch(item, this, index, startPointX, startPointY);\r\n                }\r\n            });\r\n        })*/\r\n\t}\r\n    update() {\r\n\t\tthis.donats.children.forEach((item, index) => {\r\n\t\t\tthis.physics.arcade.collide(item, [this.donats.children[index + 22], this.donats.children[index - 22], this.donats.children[index + 2], this.donats.children[index - 2]], function collide(donat1, donat2) {\r\n\t\t\t\tdonat1.body.allowGravity = false;\r\n\t\t\t\tthis.startPointX = undefined;\r\n\t\t\t\tthis.startPointY = undefined;\r\n\t\t\t});\r\n\t\t\t/*this.timer.add(1000, this.deleteArr, this, this.move3(this.donats), this.move4(this.donats), this.donats);\r\n\t\t\tif(this.move3(this.donats).length != 0) {\r\n\t\t\t\tthis.timer.add(1000, this.deleteArr, this, this.move3(this.donats), null, this.donats);\r\n\t\t\t\tconsole.log('this.move3', this.move3(this.donats));\r\n\t\t\t\tthis.timer.start();\r\n\t\t\t} else if ((this.move4(this.donats).length > 2)) {\r\n\t\t\t\tthis.timer.add(1000, this.deleteArr, this, null, this.move4(this.donats), this.donats);\r\n\t\t\t\tconsole.log('this.move4', this.move4(this.donats));\r\n\t\t\t\tthis.timer.start();\r\n\t\t\t}*/\r\n\t\t\tif(this.move3(this.donats).length != 0 && this.move4(this.donats).length > 2) {\r\n\t\t\t\tconsole.log(\"aaaaaaa\", this.move3(this.donats), this.move4(this.donats));\r\n\t\t\t\tthis.timer.add(1000, this.deleteArr, this, [], this.move4(this.donats), this.donats);\r\n\t\t\t\tthis.timer.start();\r\n\t\t\t}\r\n\t\t\tthis.timer.add(1000, this.deleteArr, this, this.move3(this.donats), this.move4(this.donats), this.donats);\r\n\t\t\tthis.timer.start();\r\n\t\t\t//this.timer.add(1000, this.deleteArr1, this, this.move4(this.donats), this.donats);\r\n\t\t\t//this.timer.start();\r\n\t\t\t//let timer = this.time.create(false);\r\n\t\t\t//timer.add(1000, this.deleteArr, this, this.move3(this.donats), this.donats);\r\n\t\t\t//timer.start();\r\n\t\t});\r\n\r\n        }\r\nmove1(a, item, index) {\r\n\tif(a > 0) {\r\n\t\tthis.add.tween(item).to( { x: '-98.5'}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\tthis.add.tween(this.donats.children[index - 1]).to( { x: '+98.5'}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\tlet donat1 = this.donats.getAt(index);\r\n\t\tlet donat2 = this.donats.getAt(index - 1);\r\n\t\tthis.donats.swap(donat1, donat2);\r\n\t\tthis.input.moveCallbacks = [];\r\n\r\n\t}\r\n\tif(a < 0) {\r\n\t\tthis.add.tween(this.donats.getAt(index)).to( { x: '+98.5'}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\tthis.add.tween(this.donats.getAt(index + 1)).to( { x: '-98.5'}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\tlet donat1 = this.donats.getAt(index);\r\n\t\tlet donat2 = this.donats.getAt(index + 1);\r\n\t\tthis.donats.swap(donat1, donat2);\r\n\t\tthis.input.moveCallbacks = [];\r\n\r\n\t}\r\n}\r\nmove2(a, item, index) {\r\n\tif(a > 0) {\r\n\t\tthis.add.tween(item).to( { y: '-87.3'}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\tthis.add.tween(this.donats.children[index - 13]).to( { y: '+87.3'}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\tlet donat1 = this.donats.getAt(index);\r\n\t\tlet donat2 = this.donats.getAt(index - 13);\r\n\t\tthis.donats.swap(donat1, donat2);\r\n\t\tthis.input.moveCallbacks = [];\r\n\r\n\t}\r\n\tif(a < 0) {\r\n\t\tthis.add.tween(item).to( { y: '+87.3'}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\tthis.add.tween(this.donats.children[index + 13]).to( { y: '-87.3'}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\tlet donat1 = this.donats.getAt(index);\r\n\t\tlet donat2 = this.donats.getAt(index + 13);\r\n\t\tthis.donats.swap(donat1, donat2);\r\n\t\tthis.input.moveCallbacks = [];\r\n\r\n\t}\r\n}\r\nmove3(a) {\r\n\tlet first1;\r\n\tlet arr1 = [];\r\n\tfor(let i = 0; i < 13; i++) {\r\n\t\tfirst1 = a.getAt(i);\r\n\t\tlet j = i + 13;\r\n\t\tarr1.push(i);\r\n\t\twhile(j < a.length + 13) {\r\n\t\t\tif(first1.key == a.getAt(j).key) {\r\n\t\t\t\tarr1.push(j);\r\n\t\t\t} else {\r\n\t\t\t\tif(arr1.length > 2) {\r\n\t\t\t\t\t//console.log(\"move3\", arr1);\r\n\t\t\t\t\treturn arr1;\r\n\t\t\t\t}\r\n\t\t\t\tfirst1 = a.getAt(j);\r\n\t\t\t\tarr1 = [];\r\n\t\t\t\tarr1.push(j);\r\n\t\t\t}\r\n\t\t\tj += 13;\r\n\t\t}\r\n\t\tarr1 = [];\r\n\t}\r\n\treturn arr1;\r\n}\r\ndeleteArr(arr1, arr, a) {\r\n\tconsole.log(arr1, arr);\r\n\tlet it = arr1[0] - 13;\r\n\tarr1.forEach((item, index) => {\r\n\t\tlet don = a.getAt(item).kill();\r\n\t\tdon.loadTexture('gem' + this.rnd.integerInRange(1, 7));\r\n\t\tdon.visible = true;\r\n\t\tdon.x = this.donats.getAt(item).x;\r\n\t\tdon.y = 0 + index * 87.3;\r\n\t\tthis.add.tween(don).from( { y: '-200'}, 1000, Phaser.Easing.Bounce.Out, true);\r\n\t});\r\n\tthis.timer.destroy();\r\n\twhile (it > 0) {\r\n\t\tconsole.log(it);\r\n\t\tlet str = 87.3 * arr1.length;\r\n\t\tthis.add.tween(a.getAt(it)).to({y: '+' + str}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\tarr1.forEach((item, index) => {\r\n\t\t\ta.swap(a.getAt(it + 13 * index), a.getAt(item));\r\n\t\t\tarr1.splice(index, 1, item - 13);\r\n\t\t})\r\n\t\t//this.donats.swap(this.donats.getAt(it), this.donats.getAt(it1));\r\n\t\tit -= 13;\r\n\t}\r\n\tthis.count++;\r\n\tif(this.count > 1) {\r\n\t\tthis.timer.destroy();\r\n\t\tthis.count = 0;\r\n\t}\r\n\r\n\tif(arr.length < 3) {\r\n\t\tarr = [];\r\n\t}\r\n\tarr.forEach(item => {\r\n\t\ta.getAt(item).kill();\r\n\t\twhile(item > 12) {\r\n\t\t\tlet next =a.getAt(item - 13);\r\n\t\t\tthis.add.tween(a.getAt(item - 13)).to( { y: '+87.3'}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\t\tlet item1 = a.getAt(item);\r\n\t\t\titem1.x = a.getAt(item).x;\r\n\t\t\titem1.y = 0;\r\n\t\t\tthis.add.tween(item1).from( { y: '-200'}, 1000, Phaser.Easing.Bounce.Out, true);\r\n\t\t\ta.swap(a.getAt(item), next);\r\n\t\t\titem -= 13;\r\n\t\t}\r\n\r\n\t\ta.getAt(item).loadTexture('gem' + this.rnd.integerInRange(1, 7));\r\n\t\ta.getAt(item).visible = true;\r\n\t\tthis.timer.destroy();\r\n\t});\r\n}\r\nmove4(a) {\r\n\tlet first;\r\n\tlet count = 0;\r\n\tlet arr = [];\r\n\tfor(let i = 0; i < a.length; i++) {\r\n\t\tif(i%13 == 0 || first.key != a.getAt(i).key) {\r\n\t\t\tfirst = a.getAt(i);\r\n\t\t\tif(count > 1) {\r\n\t\t\t\treturn arr;\r\n\t\t\t}\r\n\t\t\tcount = 0;\r\n\t\t\tarr = [];\r\n\t\t\tarr.push(i);\r\n\t\t\tcontinue;\r\n\t\t} else {\r\n\t\t\tcount++;\r\n\t\t\tarr.push(i);\r\n\t\t}\r\n\t}\r\n\treturn arr;\r\n}\r\n/*deleteArr1(arr, a) {\r\n\tif(arr.length < 3) {\r\n\t\tarr = [];\r\n\t}\r\n\tarr.forEach(item => {\r\n\t\ta.getAt(item).kill();\r\n\t\twhile(item > 12) {\r\n\t\t\tlet next =a.getAt(item - 13);\r\n\t\t\tthis.add.tween(a.getAt(item - 13)).to( { y: '+87.3'}, 1000, Phaser.Easing.Linear.None, true);\r\n\t\t\tlet item1 = a.getAt(item);\r\n\t\t\titem1.x = a.getAt(item).x;\r\n\t\t\titem1.y = 0;\r\n\t\t\tthis.add.tween(item1).from( { y: '-200'}, 1000, Phaser.Easing.Bounce.Out, true);\r\n\t\t\ta.swap(a.getAt(item), next);\r\n\t\t\titem -= 13;\r\n\t\t}\r\n\r\n\t\ta.getAt(item).loadTexture('gem' + this.rnd.integerInRange(1, 7));\r\n\t\ta.getAt(item).visible = true;\r\n\t\tthis.timer.destroy();\r\n\t});\r\n\t//this.input.moveCallbacks = [];\r\n}*/\r\n\r\n}\r\n\r\nexport default GameState;"
  ]
}